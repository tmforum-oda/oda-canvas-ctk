@startuml

actor BusinessAdmin
actor Operations
entity Component
participant "Component Implementation" as ComponentImplementation
participant "Identity Operator" as identityOperator
participant "Kubernetes API" as K8s
participant "Identity Management System" as IDM


group Bootstrap
Component <- Operations : Install
Component -> ComponentImplementation : Install
ComponentImplementation -> ComponentImplementation: Create Admin role

Component -> identityOperator: on.create 
identityOperator -> IDM: Create system user for component
note right
    This is a system-generated user (uuid) that is used then
    the component makes API calls (to another component or
    canvas service).
end note
identityOperator <- IDM: Return clientId and secret
identityOperator -> K8s: Create kubernetes secret with clientId and secret

identityOperator -> ComponentImplementation: Register identityOperator to PartyRole events
identityOperator -> IDM: Register component

identityOperator -> ComponentImplementation : Query bootstrap Admin role
identityOperator -> IDM: create role
identityOperator -> IDM: Assign seccon user to Admin role

end 
group Normal business operations

BusinessAdmin -> Component: Create Role
Component-> identityOperator: PartyRoleCreationNotification event
identityOperator -> IDM: create role
Operations->IDM  : Maintain user identities
BusinessAdmin -> Component: Update Role
Component-> identityOperator: PartyRoleAttributeValueChangeNotification event
identityOperator -> IDM: Update role
Operations->IDM  : Maintain user identities
BusinessAdmin -> Component: Delete Role
Component-> identityOperator: PartyRoleDeletionNotification event
identityOperator -> IDM: Delete role

end
group Uninstall
Operations -> Component  : Uninstall
Component -> identityOperator: on.delete 
identityOperator -> IDM: Delete component and all roles
end

@enduml